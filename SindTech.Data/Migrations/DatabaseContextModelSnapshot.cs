// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SindTech.Data.Context;

#nullable disable

namespace SindTech.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SindTech.Business.Models.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MoradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoContato")
                        .HasColumnType("int");

                    b.Property<string>("ValorContato")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MoradorId")
                        .IsUnique();

                    b.ToTable("Contatos", (string)null);
                });

            modelBuilder.Entity("SindTech.Business.Models.Morador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NumeroApartamento")
                        .HasColumnType("int");

                    b.Property<int>("TipoMorador")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Moradores", (string)null);
                });

            modelBuilder.Entity("SindTech.Business.Models.Reclamacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("MoradorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MoradorId");

                    b.ToTable("Reclamacoes", (string)null);
                });

            modelBuilder.Entity("SindTech.Business.Models.Contato", b =>
                {
                    b.HasOne("SindTech.Business.Models.Morador", "Morador")
                        .WithOne("Contato")
                        .HasForeignKey("SindTech.Business.Models.Contato", "MoradorId")
                        .IsRequired();

                    b.Navigation("Morador");
                });

            modelBuilder.Entity("SindTech.Business.Models.Reclamacao", b =>
                {
                    b.HasOne("SindTech.Business.Models.Morador", "Morador")
                        .WithMany("Reclamacoes")
                        .HasForeignKey("MoradorId")
                        .IsRequired();

                    b.Navigation("Morador");
                });

            modelBuilder.Entity("SindTech.Business.Models.Morador", b =>
                {
                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Reclamacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
